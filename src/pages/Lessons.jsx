function Lessons() {
  const [testMode, setTestMode] = useState(false); // –¢–µ—Å—Ç–æ–≤–∏–π —Ä–µ–∂–∏–º
  
  const lessons = [
    { day: 1, title: '–ó–Ω–∞–π–æ–º—Å—Ç–≤–æ –∑ –∫–æ–º–ø–∞–Ω—ñ—î—é', description: '–Ü—Å—Ç–æ—Ä—ñ—è, —Ü—ñ–Ω–Ω–æ—Å—Ç—ñ, –º—ñ—Å—ñ—è', status: 'in_progress', reward: 500, icon: 'üè¢' },
    { day: 2, title: '–ü—Ä–æ–¥—É–∫—Ç–æ–≤–∞ –ª—ñ–Ω—ñ–π–∫–∞', description: '–ü–µ–ª—å–º–µ–Ω—ñ, –≤–∞—Ä–µ–Ω–∏–∫–∏, —Ö—ñ–Ω–∫–∞–ª—ñ', status: testMode ? 'not_started' : 'locked', reward: 500, icon: 'ü•ü' },
    { day: 3, title: '–†–æ–±–æ—Ç–∞ –∑ –∫–∞—Å–æ—é Poster', description: '–ö–∞—Å–æ–≤–∞ –¥–∏—Å—Ü–∏–ø–ª—ñ–Ω–∞', status: testMode ? 'not_started' : 'locked', reward: 500, icon: 'üí≥' },
    { day: 4, title: '–¢–µ—Ö–Ω—ñ–∫–∞ –ø—Ä–æ–¥–∞–∂—É', description: '–ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü—ñ—è, –¥–æ–ø—Ä–æ–¥–∞–∂—ñ', status: testMode ? 'not_started' : 'locked', reward: 500, icon: 'üíº' },
    { day: 5, title: '–†–æ–±–æ—Ç–∞ –∑ –∫–ª—ñ—î–Ω—Ç–∞–º–∏', description: '–¢–∏–ø–∏ –∫–ª—ñ—î–Ω—Ç—ñ–≤, –∫–æ–Ω—Ñ–ª—ñ–∫—Ç–∏', status: testMode ? 'not_started' : 'locked', reward: 500, icon: 'üòä' },
    { day: 6, title: '–§—ñ–Ω–∞–ª—å–Ω–∏–π —ñ—Å–ø–∏—Ç', description: '–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑–Ω–∞–Ω—å', status: testMode ? 'not_started' : 'locked', reward: 500, icon: 'üéì' }
  ];

  const getStatusIcon = (status) => {
    if (status === 'completed') return <CheckCircle className="text-green-500" size={28} />;
    if (status === 'in_progress') return <Circle className="text-galya-red" size={28} />;
    if (status === 'not_started') return <Circle className="text-gray-400" size={28} />;
    return <Lock className="text-gray-400" size={28} />;
  };

  const getStatusBadge = (status) => {
    if (status === 'completed') return <span className="bg-green-100 text-green-800 text-xs px-2 py-1 rounded-full">–ó–∞–≤–µ—Ä—à–µ–Ω–æ</span>;
    if (status === 'in_progress') return <span className="bg-yellow-100 text-yellow-800 text-xs px-2 py-1 rounded-full">–í –ø—Ä–æ—Ü–µ—Å—ñ</span>;
    if (status === 'not_started') return <span className="bg-blue-100 text-blue-800 text-xs px-2 py-1 rounded-full">–î–æ—Å—Ç—É–ø–Ω–∏–π</span>;
    return <span className="bg-gray-100 text-gray-600 text-xs px-2 py-1 rounded-full">–ó–∞–±–ª–æ–∫–æ–≤–∞–Ω–æ</span>;
  };

  return (
    <div className="pb-20 px-4 pt-6 max-w-md mx-auto bg-gradient-to-b from-galya-beige to-gray-50 min-h-screen">
      <div className="flex items-center justify-center mb-4">
        <img src="/logo.png" alt="–ì–∞–ª—è –ë–∞–ª—É–≤–∞–Ω–∞" className="w-16 h-16 object-contain" />
      </div>
      
      <div className="mb-6 text-center">
        <h1 className="text-2xl font-bold text-galya-brown">–ü—Ä–æ–≥—Ä–∞–º–∞ –Ω–∞–≤—á–∞–Ω–Ω—è</h1>
        <p className="text-galya-brown-light mt-1">6 –¥–Ω—ñ–≤ –¥–æ –≤–∞—à–æ–≥–æ —Å–µ—Ä—Ç–∏—Ñ—ñ–∫–∞—Ç—É</p>
      </div>

      {/* –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ä–µ–∂–∏–º—É */}
      <div className="mb-6 bg-blue-50 border-2 border-blue-200 rounded-xl p-4">
        <div className="flex items-center justify-between">
          <div>
            <p className="font-semibold text-blue-900">–¢–µ—Å—Ç–æ–≤–∏–π —Ä–µ–∂–∏–º</p>
            <p className="text-xs text-blue-700">–í—Å—ñ –¥–Ω—ñ –≤—ñ–¥–∫—Ä–∏—Ç—ñ –¥–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É</p>
          </div>
          <button
            onClick={() => setTestMode(!testMode)}
            className={`relative inline-flex h-8 w-14 items-center rounded-full transition-colors ${
              testMode ? 'bg-blue-600' : 'bg-gray-300'
            }`}
          >
            <span
              className={`inline-block h-6 w-6 transform rounded-full bg-white transition-transform ${
                testMode ? 'translate-x-7' : 'translate-x-1'
              }`}
            />
          </button>
        </div>
      </div>

      <div className="space-y-4">
        {lessons.map((lesson) => {
          const isAccessible = testMode || lesson.status !== 'locked';
          
          return (
            <div key={lesson.day} className={`bg-white rounded-xl shadow-sm overflow-hidden border-2 ${!isAccessible ? 'opacity-60 border-gray-200' : 'border-galya-accent'}`}>
              <div className="p-5">
                <div className="flex items-start justify-between mb-3">
                  <div className="flex items-start space-x-3 flex-1">
                    <div className="text-3xl">{lesson.icon}</div>
                    <div className="flex-1">
                      <div className="flex items-center justify-between mb-1">
                        <span className="text-sm font-medium text-galya-brown-light">–î–µ–Ω—å {lesson.day}</span>
                        {getStatusBadge(lesson.status)}
                      </div>
                      <h3 className="font-semibold text-galya-brown mb-1">{lesson.title}</h3>
                      <p className="text-sm text-gray-600">{lesson.description}</p>
                    </div>
                  </div>
                </div>
                <div className="flex items-center justify-between pt-3 border-t border-gray-100">
                  <div className="flex items-center text-green-600">
                    <span className="text-lg font-bold">{lesson.reward} ‚Ç¥</span>
                    <span className="text-sm ml-1">–≤–∏–Ω–∞–≥–æ—Ä–æ–¥–∞</span>
                  </div>
                  {isAccessible && (
                    <Link to={`/lesson/${lesson.day}`} className="flex items-center text-galya-brown font-medium text-sm hover:text-galya-brown-light transition-colors">
                      {lesson.status === 'completed' ? '–ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏' : '–ü–æ—á–∞—Ç–∏'}
                      <ArrowRight size={16} className="ml-1" />
                    </Link>
                  )}
                </div>
              </div>
            </div>
          );
        })}
      </div>

      <div className="mt-6 bg-galya-beige border-2 border-galya-accent rounded-xl p-4">
        <p className="text-sm text-galya-brown">
          <strong>–ü—ñ–¥–∫–∞–∑–∫–∞:</strong> –ó–∞–≤–µ—Ä—à—É–π—Ç–µ —É—Ä–æ–∫–∏ –ø–æ –ø–æ—Ä—è–¥–∫—É. –ö–æ–∂–µ–Ω –Ω–∞—Å—Ç—É–ø–Ω–∏–π –¥–µ–Ω—å –≤—ñ–¥–∫—Ä–∏–≤–∞—î—Ç—å—Å—è –ø—ñ—Å–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ–≥–æ.
        </p>
      </div>
    </div>
  );
}